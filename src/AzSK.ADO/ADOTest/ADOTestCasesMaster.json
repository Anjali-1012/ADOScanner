[
    {
        "TestCaseID":  "AzureDevOps_Org_Check_Any_ControlErrorsOut",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "Organization",
        "Enabled":  true,
        "TestMethod":  "Test_Control_Errors_For_Org",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Sanity check to ensure that no control is erroring out when scanning for org in GADS"
    },
    {
        "TestCaseID":  "AzureDevOps_Prj_Check_Any_ControlErrorsOut",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "Project",
        "Enabled":  true,
        "TestMethod":  "Test_Control_Errors_For_Proj",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Sanity check to ensure that no control is erroring out when scanning for projects in GADS"
    },
    {
        "TestCaseID":  "AzureDevOps_Users_Check_Any_ControlErrorsOut",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "User",
        "Enabled":  true,
        "TestMethod":  "Test_Control_Errors_For_User",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Sanity check to ensure that no uers control is erroring out and acceesed correctly in GADS."
    },
    {
        "TestCaseID":  "AzureDevOps_Build_Check_Any_ControlErrorsOut",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "Build",
        "Enabled":  true,
        "TestMethod":  "Test_Control_Errors_For_Build",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Sanity check to ensure that no Build control is erroring out and acceesed correctly in GADS."
    },
    {
        "TestCaseID":  "AzureDevOps_AgtPool_Check_Any_ControlErrorsOut",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "AgentPool",
        "Enabled":  true,
        "TestMethod":  "Test_Control_Errors_For_AgentPool",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Sanity check to ensure that no AgentPool control is erroring out and acceesed correctly in GADS."
    },
    {
        "TestCaseID":  "AzureDevOps_Release_Check_Any_ControlErrorsOut",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "Release",
        "Enabled":  true,
        "TestMethod":  "Test_Control_Errors_For_Release",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Sanity check to ensure that no Release control is erroring out and acceesed correctly in GADS."
    },
    {
        "TestCaseID":  "AzureDevOps_ServiceConn_Check_Any_ControlErrorsOut",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "ServiceConnection",
        "Enabled":  true,
        "TestMethod":  "Test_Control_Errors_For_ServiceConnection",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Sanity check to ensure that no ServiceConnection control is erroring out and acceesed correctly in GADS."
    },
    {
        "TestCaseID":  "AzureDevOps_ControlId_Scan_Check",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "All",
        "Enabled":  true,
        "TestMethod":  "Test_ControlId_Scan_Check",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "This is the sanity check to scan only mentioned ControlID"
    },
    {
        "TestCaseID":  "AzureDevOps_All_Severity_Check",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "All",
        "Enabled":  true,
        "TestMethod":  "Test_Severity_Scan_Check",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "This is the sanity check to scan only mentioned severity"
    },
    {
        "TestCaseID":  "AzureDevOps_Baseline_controls_Scan_Check",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "All",
        "Enabled":  true,
        "TestMethod":  "Test_Baseline_controls_Scan_Check",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "This is the sanity check to scan only baseline controls",
        "Description":  "Baseline_controls"
    },
    {
        "TestCaseID":  "AzureDevOps_AgtPool_Check_Any_ControlErrorsOut",
        "Priority":  "1",
        "Feature":  "Scanning",
        "ModuleName":  "GADS",
        "Type":  "AgentPool",
        "Enabled":  true,
        "TestMethod":  "Test_Control_Errors_For_AgentPool",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Sanity check to ensure that no AgentPool control is erroring out and acceesed correctly in GADS."
    },
    {
        "TestCaseID":  "AzureDevOps_Org_Verify_Control_Correctness_Success",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "Organization",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_Proj_Success",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on projects for failure cases"
    },
    {
        "TestCaseID":  "AzureDevOps_Prj_Verify_Control_Correctness_Fail",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "Project",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_Proj_Fail",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on projects for failure cases"
    },
    {
        "TestCaseID":  "AzureDevOps_Prj_Verify_Control_Correctness_Success",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "Project",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_Proj_Success",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on projects for success cases"
    },
    {
        "TestCaseID":  "AzureDevOps_Release_Verify_Control_Correctness_Fail",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "Release",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_Release_Fail",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on Release for failure cases"
    },
    {
        "TestCaseID":  "AzureDevOps_Release_Verify_Control_Correctness_Success",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "Release",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_Release_Success",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on Release for success cases"
    },
    {
        "TestCaseID":  "AzureDevOps_Build_Verify_Control_Correctness_Fail",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "Build",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_Build_Fail",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on Build for failure cases"
    },
    {
        "TestCaseID":  "AzureDevOps_Build_Verify_Control_Correctness_Success",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "Build",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_Build_Success",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on Build for success cases"
    },
    {
        "TestCaseID":  "AzureDevOps_AgentPool_Verify_Control_Correctness_Fail",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "AgentPool",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_AgentPool_Fail",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on AgentPool for failure cases"
    },
    {
        "TestCaseID":  "AzureDevOps_AgentPool_Verify_Control_Correctness_Success",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "AgentPool",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_AgentPool_Success",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on AgentPool for success cases"
    },
    {
        "TestCaseID":  "AzureDevOps_Svc_Verify_Control_Correctness_Success",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "ServiceConnection",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_SVC_Success",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on ServiceConnection for success cases"
    },
    {
        "TestCaseID":  "AzureDevOps_Svc_Verify_Control_Correctness_Fail",
        "Priority":  "1",
        "Feature":  "ControlCorrectness",
        "ModuleName":  "GADS",
        "Type":  "ServiceConnection",
        "Enabled":  true,
        "TestMethod":  "Verify_Control_Correctness_SVC_Fail",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check the control correctness on ServiceConnection for failure cases"
    },
    {
        "TestCaseID":  "AzureDevOps_Verify_PartialCommit",
        "Priority":  "1",
        "Feature":  "PartialCommit",
        "ModuleName":  "GADS",
        "Type":  "All",
        "Enabled":  true,
        "TestMethod":  "Verify_PartialCommit_Project",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "Check whether the PartialCommits is actually scanning the resources where it left from previous scan"
    },
    {
        "TestCaseID":  "AzureDevOps_Verify_Bug_Logging_For_Controls_Failed",
        "Priority":  "1",
        "Feature":  "BugLogging",
        "ModuleName":  "GADS",
        "Type":  "Project",
        "Enabled":  true,
        "TestMethod":  "Verify_Bug_Logging_For_Controls_Failed",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "To check if all failing controls are being logged"
    },
    {
        "TestCaseID":  "AzureDevOps_Verify_Duplicate_Bug_Logging_For_Controls_Failed",
        "Priority":  "1",
        "Feature":  "BugLogging",
        "ModuleName":  "GADS",
        "Type":  "Project",
        "Enabled":  true,
        "TestMethod":  "Verify_Bug_Duplicate_Logging_For_Controls_Failed",
        "AutomationStatus":  "Automated",
        "ManualSteps":  "",
        "Description":  "To check if no failing controls are being logged again"
    }
]